sources:
  - name: Spotify
    handler:
      jsonSchema:
        baseSchema: ./json-schemas/baseSchema.json
        baseUrl: https://api.spotify.com/v1/
        operations:
          - type: Query
            field: album
            description: 'Get an Album: Get Spotify catalog information for a single album.'
            path: /albums/{args.id}
            requestSchema: ./json-schemas/album.request.json
            responseTypeName: AlbumObject
          - type: Query
            field: albums
            description: >-
              Get Multiple Albums: Get Spotify catalog information for multiple
              albums identified by their Spotify IDs.
            path: /albums
            requestSchema: ./json-schemas/albums.request.json
            responseSchema: ./json-schemas/albums.response.json
          - type: Query
            field: albumTracks
            description: 'Get an Album: Get Spotify catalog information for a single album.'
            path: /albums/{args.id}/tracks
            requestSchema: ./json-schemas/albumTracks.request.json
            responseSchema: ./json-schemas/albumTracks.response.json
          - type: Query
            field: artist
            description: >-
              Get an Artist: Get Spotify catalog information for a single artist
              identified by their unique Spotify ID.
            path: /artists/{args.id}
            requestSchema: ./json-schemas/artist.request.json
            responseTypeName: ArtistObject
          - type: Query
            field: artistAlbums
            description: >-
              Get an Artist's Albums: Get Spotify catalog information about an
              artist’s albums.
            path: /artists/{args.id}/albums
            requestSchema: ./json-schemas/artistAlbums.request.json
            responseSchema: ./json-schemas/artistAlbums.response.json
          - type: Query
            field: artistRelatedArtists
            description: >-
              Get an Artist's Related Artists: Get Spotify catalog information
              about artists similar to a given artist. Similarity is based on
              analysis of the Spotify community’s listening history.
            path: /artists/{args.id}/related-artists
            responseSchema: ./json-schemas/artistRelatedArtists.response.json
          - type: Query
            field: artists
            description: >-
              Get Multiple Artists: Get Spotify catalog information for several
              artists based on their Spotify IDs.
            path: /artists
            requestSchema: ./json-schemas/artists.request.json
            responseSchema: ./json-schemas/artists.response.json
          - type: Query
            field: artistTopTracks
            description: >-
              Get an Artist's Top Tracks: Get Spotify catalog information about
              an artist’s top tracks by country.
            path: /artists/{args.id}/top-tracks
            requestSchema: ./json-schemas/artistTopTracks.request.json
            responseSchema: ./json-schemas/artistTopTracks.response.json
          - type: Query
            field: browseCategories
            description: >-
              Get All Categories: Get a list of categories used to tag items in
              Spotify (on, for example, the Spotify player’s “Browse” tab).
            path: /browse/categories
            requestSchema: ./json-schemas/browseCategories.request.json
            responseSchema: ./json-schemas/browseCategories.response.json
          - type: Query
            field: browseCategory
            description: >-
              Get a Category: Get a single category used to tag items in Spotify
              (on, for example, the Spotify player’s “Browse” tab).
            path: /browse/categories/{args.category_id}
            requestSchema: ./json-schemas/browseCategory.request.json
            responseTypeName: CategoryObject
          - type: Query
            field: browseCategoryPlaylists
            description: >-
              Get a Category's Playlists: Get a list of Spotify playlists tagged
              with a particular category.
            path: /browse/categories/{args.category_id}/playlists
            requestSchema: ./json-schemas/browseCategoryPlaylists.request.json
            responseSchema: ./json-schemas/browseCategoryPlaylists.response.json
          - type: Query
            field: browseFeaturedPlaylists
            description: >-
              Get All New Releases: Get a list of new album releases featured in
              Spotify (shown, for example, on a Spotify player’s “Browse” tab).
            path: /browse/featured-playlists
            requestSchema: ./json-schemas/browseFeaturedPlaylists.request.json
            responseSchema: ./json-schemas/browseFeaturedPlaylists.response.json
          - type: Query
            field: browseNewReleases
            description: >-
              Get All New Releases: Get a list of new album releases featured in
              Spotify (shown, for example, on a Spotify player’s “Browse” tab).
            path: /browse/new-releases
            requestSchema: ./json-schemas/browseNewReleases.request.json
            responseSchema: ./json-schemas/browseNewReleases.response.json
          - type: Query
            field: episode
            description: >-
              Get an Episode: Get Spotify catalog information for a single
              episode identified by its unique Spotify ID.
            path: /episodes/{args.id}
            requestSchema: ./json-schemas/episode.request.json
            responseTypeName: EpisodeObject
          - type: Query
            field: episodes
            description: >-
              Get Multiple Episodes: Get Spotify catalog information for several
              episodes based on their Spotify IDs.
            path: /episodes
            requestSchema: ./json-schemas/episodes.request.json
            responseSchema: ./json-schemas/episodes.response.json
          - type: Query
            field: playerRecentlyPlayed
            description: >-
              Get Current User's Recently Played Tracks: Get tracks from the
              current user’s recently played tracks. Note: Currently doesn’t
              support podcast episodes.
            path: /me/player/recently-played
            requestSchema: ./json-schemas/playerRecentlyPlayed.request.json
            responseSchema: ./json-schemas/playerRecentlyPlayed.response.json
          - type: Mutation
            field: createPlaylist
            description: >-
              Create a Playlist: Create a playlist for a Spotify user. (The
              playlist will be empty until you add tracks.)
            path: /users/{args.user_id}/playlists
            requestSchema: ./json-schemas/createPlaylist.request.json
            responseTypeName: PlaylistObject
          - type: Query
            field: mePlaylists
            description: >-
              Get a List of Current User's Playlists: Get a list of the
              playlists owned or followed by the current Spotify user.
            path: /me/playlists
            requestSchema: ./json-schemas/mePlaylists.request.json
            responseSchema: ./json-schemas/mePlaylists.response.json
          - type: Query
            field: playlist
            description: 'Get a Playlist: Get a playlist owned by a Spotify user.'
            path: /playlists/{args.id}
            requestSchema: ./json-schemas/playlist.request.json
            responseTypeName: PlaylistObject
          - type: Mutation
            field: playlistAddItem
            description: >-
              Add Items to a Playlist: Add one or more items to a user’s
              playlist.
            path: /playlists/{args.id}/tracks
            requestSchema: ./json-schemas/playlistAddItem.request.json
            responseSchema: ./json-schemas/playlistAddItem.response.json
          - type: Query
            field: playlistCoverImages
            description: >-
              Get a Playlist Cover Image: Get the current image associated with
              a specific playlist.
            path: /playlists/{args.id}/images
            responseSchema: ./json-schemas/playlistCoverImages.response.json
          - type: Mutation
            field: playlistRemoveItems
            method: DELETE
            description: >-
              Remove Items from a Playlist: Remove one or more items from a
              user’s playlist.
            path: /playlists/{args.id}/tracks
            requestSchema: ./json-schemas/playlistRemoveItems.request.json
            responseSchema: ./json-schemas/playlistRemoveItems.response.json
          - type: Mutation
            field: playlistReorderOrReplaceItems
            method: PUT
            description: Reorder or Replace a Playlist's Items
            path: /playlists/{args.id}/tracks
            requestSchema: ./json-schemas/playlistReorderOrReplaceItems.request.json
            responseSchema: ./json-schemas/playlistReorderOrReplaceItems.response.json
          - type: Query
            field: playlistTracks
            description: 'Get a Playlist: Get a playlist owned by a Spotify user.'
            path: /playlists/{args.id}/tracks
            requestSchema: ./json-schemas/playlistTracks.request.json
            responseSchema: ./json-schemas/playlistTracks.response.json
          - type: Mutation
            field: updatePlaylist
            method: PUT
            description: >-
              Change a Playlist's Details: Change a playlist’s name and
              public/private state. (The user must, of course, own the
              playlist.)
            path: /playlists/{args.id}
            requestSchema: ./json-schemas/updatePlaylist.request.json
            responseTypeName: PlaylistObject
          - type: Query
            field: userPlaylists
            description: >-
              Get a List of a User's Playlists: Get a list of the playlists
              owned or followed by a Spotify user.
            path: /users/{args.user_id}/playlists
            requestSchema: ./json-schemas/userPlaylists.request.json
            responseSchema: ./json-schemas/userPlaylists.response.json
          - type: Query
            field: search
            description: >-
              Search for an Item: Get Spotify Catalog information about albums,
              artists, playlists, tracks, shows or episodes that match a keyword
              string.
            path: /search
            requestSchema: ./json-schemas/search.request.json
            responseSchema: ./json-schemas/search.response.json
          - type: Query
            field: show
            description: >-
              Get a Show: Get Spotify catalog information for a single show
              identified by its unique Spotify ID.
            path: /shows/{args.id}
            requestSchema: ./json-schemas/show.request.json
            responseTypeName: ShowObject
          - type: Query
            field: showEpisodes
            description: >-
              Get a Show's Episodes: Get Spotify catalog information about an
              show’s episodes. Optional parameters can be used to limit the
              number of episodes returned.
            path: /shows/{args.id}/episodes
            requestSchema: ./json-schemas/showEpisodes.request.json
            responseSchema: ./json-schemas/showEpisodes.response.json
          - type: Query
            field: shows
            description: >-
              Get Multiple Shows: Get Spotify catalog information for several
              shows based on their Spotify IDs.
            path: /shows
            requestSchema: ./json-schemas/shows.request.json
            responseSchema: ./json-schemas/shows.response.json
          - type: Query
            field: track
            description: >-
              Get a Track: Get Spotify catalog information for a single track
              identified by its unique Spotify ID.
            path: /tracks/{args.id}
            requestSchema: ./json-schemas/track.request.json
            responseTypeName: TrackObject
          - type: Query
            field: trackAudioFeatures
            description: >-
              Get Audio Features for a Track: Get audio feature information for
              a single track identified by its unique Spotify ID.
            path: /audio-features/{args.id}
            requestSchema: ./json-schemas/trackAudioFeatures.request.json
            responseTypeName: AudioFeaturesObject
          - type: Query
            field: tracks
            description: >-
              Get Several Tracks: Get Spotify catalog information for multiple
              tracks based on their Spotify IDs.
            path: /tracks
            requestSchema: ./json-schemas/tracks.request.json
            responseSchema: ./json-schemas/tracks.response.json
          - type: Query
            field: tracksAudioFeatures
            description: >-
              Get Audio Features for Several Tracks: Get audio features for
              multiple tracks based on their Spotify IDs.
            path: /audio-features
            requestSchema: ./json-schemas/tracksAudioFeatures.request.json
            responseSchema: ./json-schemas/tracksAudioFeatures.response.json
          - type: Query
            field: me
            description: >-
              Get Current User's Profile: Get detailed profile information about
              the current user (including the current user’s username).
            path: /me
            responseTypeName: PrivateUserObject
          - type: Query
            field: user
            description: >-
              Get a User's Profile: Get public profile information about a
              Spotify user.
            path: /users/{args.id}
            responseTypeName: PublicUserObject
